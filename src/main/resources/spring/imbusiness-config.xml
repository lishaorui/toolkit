<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd  
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<import resource="datasource-config.xml" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<context:annotation-config />

	<context:component-scan base-package="io.dev.app" />
	
	<task:executor id="executor" pool-size="5" />  
    <task:scheduler id="scheduler" pool-size="10" />  
    <task:annotation-driven executor="executor" scheduler="scheduler" /> 
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<mvc:annotation-driven>
        <!-- mvc:message-converters 需要改成3.1.xsd -->
        <mvc:message-converters register-defaults="true">
            <!-- 使用FastJson来作为json输出的转换器 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value = "application/json" />
                <property name="features" >
                	<array>
                		<!-- 输出空字段  -->
                		<value>WriteMapNullValue</value>
                		<value>WriteNullStringAsEmpty</value>
                		<!-- <value>PrettyFormat</value> -->
                	</array>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

	<!--静态资源的访问配置,文件夹配置，二选一 -->
	<mvc:resources mapping="/components/**" location="/components/" />
	<mvc:resources mapping="/commons/**" location="/commons/" />
	<mvc:resources mapping="/app/**" location="/app/" />
	<mvc:resources mapping="/system/js/**" location="/system/js/" />
	
	<mvc:interceptors >   
        <mvc:interceptor>   
            <mvc:mapping path="/sys/*" />
            <mvc:mapping path="/account/*" />
            <bean class="io.dev.app.interceptor.LoginInterceptor"></bean>   
        </mvc:interceptor>   
    </mvc:interceptors>
    
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<!-- <prop key="kaptcha.border.color">105,179,90</prop> -->
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.image.width">125</prop>
						<prop key="kaptcha.image.height">45</prop>
						<prop key="kaptcha.textproducer.font.size">35</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.char.string">abcdefghijklmgopqrstuvwxyz</prop>
						<prop key="kaptcha.textproducer.char.space">4</prop>
						<prop key="kaptcha.textproducer.font.names">Courier</prop>
						<!-- <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop> -->
						<prop key="kaptcha.background.clear.from">white</prop>
						<prop key="kaptcha.background.clear.to">white</prop>
						<prop key="kaptcha.noise.color">105,179,90</prop>
						<!-- <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.WaterRipple</prop> --><!-- 水纹 -->
						<!-- <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.FishEyeGimpy</prop> --><!-- 鱼眼 -->
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop><!-- 阴影 -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
</beans>